#!python
'''
OSX defaults inspired system
See http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/defaults.1.html
'''
import os
import sys
from optparse import OptionParser
from pydefaults import database,Error

class Client(OptionParser):
	def __init__(self):
		usage = '''usage: %prog [options]
	read
	read <domain>
	read <domain> <key>

	write <domain> <key> <value>
	
	rename <domain> <old_key> <new_key>
	
	delete <domain>
	delete <domain> <key>
	
	domains
'''
		OptionParser.__init__(self,usage=usage)
		self.add_option("-f","--file",help="Filename",
						dest='file',default='~/.pydefaults')
		self.add_option("-e","--edit",help="Open file in editor",
						dest='edit',action="store_true",default=False)
		self.add_option("-d","--debug",help="Extra debug information",
						dest='debug',action="store_true",default=False)
	def parse_args(self, args=None, values=None):
		opts, args = OptionParser.parse_args(self, args, values)
		if opts.debug:
			print >> sys.stderr, 'Options:',opts
			print >> sys.stderr, 'Args:',args
		if opts.edit:
			if os.environ['EDITOR']:
				os.system('%s %s'%(os.environ['EDITOR'],opts.file))
			exit()
		if len(args) < 1:
			exit(self.print_help())
		
		opts.file = os.path.expanduser(opts.file)
		try:
			db = database(opts.file)
		except Error,e:
			if not opts.debug:
				exit(e)
			raise e
		cmds = {
			'read':db.read,
			'write':db.write,
			'rename':db.rename,
			'delete':db.delete,
			'domains':db.domains,
		}
		if not cmds.has_key(args[0]):
			self.error('Unknown command %s'%args[0])
		func = cmds.get(args[0])
		args = args[1:] # Pop off the command
		try:
			if opts.debug:
				print >> sys.stderr, func,args
			print func(*args)
		except TypeError,e:
			if not opts.debug:
				return self.error('Invalid Arguments')
			raise e
		except Error,e:
			if not opts.debug:
				exit(e)
			raise e
			
if __name__ == '__main__':
	Client().parse_args()
